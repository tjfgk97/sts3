DB 관련 설정 -> root-context.xml
1) DataSource (DB)
	- 드라이버 클래스
	- DB까지의 경로(url)
	- DB 계정 이름
	- DB 계정 비밀번호
	
2) SqlSessionFactoryBean (MyBatis)
	MyBatis를 위한 클래스(인터페이스) scanning

3) Transaction 관련

Java package
1) service - Service 클래스를 작성
2) dao - DAO 인터페이스를 작성
3) dto - DTO 클래스를 작성
4) util - 기타 도구 관련 클래스(paging 처리 등)






Spring Framework의 components
	Spring이 관리하는 대상 객체. 
	IoC로 처리하는 DI의 대상.
	
	component는 어노테이션으로 처리.
	1) @Component - 컨트롤러와 서비스를 제외한 대상 객체
	2) @Controller - 제어용 객체
	3) @Service - 기능 처리용 객체
	
	
Job(잡) - 요청 처리 프로세스
View <-> Controller <-> Service <-> Dao <-> DB


Class와 Interface
	메소드 = 선언부 + 정의부 -> 클래스 => 인스턴스 생성 후 사용
	메소드 선언부 -> 인터페이스 =/=> 인스턴스 생성이 불가
	
	추상화(Abstract) - 개념을 정의한다.

DAO를 사용하는 클래스는 Service 클래스.
MyBatis로 처리되는 인스턴스는 스프링 프레임워크에 등록된다.
(즉, 컴포넌트와 같다. -> DI를 자동으로 처리)

@Autowired 어노테이션
컴포넌트 인스턴스를 자동으로 주입 또는 수거하도록 지정하는 어노테이션.





